openapi: 3.0.3
info:
  title: Fiber Boilerplate API - Transaksi Management
  description: API dokumentasi untuk sistem manajemen transaksi pada aplikasi Fast Track
  version: 1.0.0
  contact:
    name: Developer Team
    email: developer@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000/api/v1
    description: Development server
  - url: https://api.example.com/v1
    description: Production server

paths:
  /transaksi:
    get:
      tags:
        - Transaksi Management
      summary: Dapatkan daftar transaksi
      description: Endpoint untuk mendapatkan daftar transaksi dengan fitur pencarian, filtering, dan pengurutan
      operationId: getTransaksiList
      parameters:
        - name: search
          in: query
          description: Pencarian berdasarkan nama kantong atau catatan
          schema:
            type: string
          example: "Makan siang"
        - name: jenis
          in: query
          description: Filter berdasarkan jenis transaksi
          schema:
            type: string
            enum: [Pemasukan, Pengeluaran]
          example: "Pengeluaran"
        - name: kantong_nama
          in: query
          description: Filter berdasarkan nama kantong
          schema:
            type: string
          example: "Kantong Belanja"
        - name: tanggal_mulai
          in: query
          description: Filter berdasarkan tanggal mulai (format YYYY-MM-DD)
          schema:
            type: string
            format: date
          example: "2024-01-01"
        - name: tanggal_selesai
          in: query
          description: Filter berdasarkan tanggal selesai (format YYYY-MM-DD)
          schema:
            type: string
            format: date
          example: "2024-01-31"
        - name: sort_by
          in: query
          description: Field untuk pengurutan (tanggal atau jumlah)
          schema:
            type: string
            enum: [tanggal, jumlah]
            default: tanggal
        - name: sort_direction
          in: query
          description: Arah pengurutan
          schema:
            type: string
            enum: [asc, desc]
            default: desc
        - name: page
          in: query
          description: Nomor halaman
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          description: Jumlah item per halaman
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
      responses:
        '200':
          description: Daftar transaksi berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransaksiListResponse'
              example:
                success: true
                message: "Daftar transaksi berhasil diambil"
                code: 200
                data:
                  - id: "550e8400-e29b-41d4-a716-446655440001"
                    tanggal: "2024-01-15"
                    jenis: "Pengeluaran"
                    jumlah: 50000
                    kantong_id: "550e8400-e29b-41d4-a716-446655440011"
                    kantong_nama: "Kantong Belanja"
                    catatan: "Makan siang di restoran"
                    created_at: "2024-01-15T12:30:00Z"
                    updated_at: "2024-01-15T12:30:00Z"
                  - id: "550e8400-e29b-41d4-a716-446655440002"
                    tanggal: "2024-01-14"
                    jenis: "Pemasukan"
                    jumlah: 1000000
                    kantong_id: "550e8400-e29b-41d4-a716-446655440012"
                    kantong_nama: "Tabungan Utama"
                    catatan: "Gaji bulanan"
                    created_at: "2024-01-14T08:00:00Z"
                    updated_at: "2024-01-14T08:00:00Z"
                meta:
                  current_page: 1
                  total_pages: 5
                  total_records: 47
                  per_page: 10
                timestamp: "2024-01-15T12:30:00Z"
        '400':
          description: Parameter tidak valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '401':
          description: Tidak memiliki akses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Tidak memiliki akses"
                code: 401
                timestamp: "2024-01-15T12:30:00Z"
        '500':
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - Transaksi Management
      summary: Buat transaksi baru
      description: Endpoint untuk membuat transaksi baru
      operationId: createTransaksi
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransaksiRequest'
            example:
              tanggal: "2024-01-15"
              jenis: "Pengeluaran"
              jumlah: 75000
              kantong_id: "550e8400-e29b-41d4-a716-446655440011"
              catatan: "Belanja groceries mingguan"
      responses:
        '201':
          description: Transaksi berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransaksiResponse'
              example:
                success: true
                message: "Transaksi berhasil dibuat"
                code: 201
                data:
                  id: "550e8400-e29b-41d4-a716-446655440003"
                  tanggal: "2024-01-15"
                  jenis: "Pengeluaran"
                  jumlah: 75000
                  kantong_id: "550e8400-e29b-41d4-a716-446655440011"
                  kantong_nama: "Kantong Belanja"
                  catatan: "Belanja groceries mingguan"
                  created_at: "2024-01-15T14:30:00Z"
                  updated_at: "2024-01-15T14:30:00Z"
                timestamp: "2024-01-15T14:30:00Z"
        '400':
          description: Data validasi tidak valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '401':
          description: Tidak memiliki akses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Kantong tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Kantong tidak ditemukan"
                code: 404
                timestamp: "2024-01-15T14:30:00Z"
        '409':
          description: Saldo kantong tidak mencukupi untuk pengeluaran
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Saldo kantong tidak mencukupi untuk transaksi pengeluaran"
                code: 409
                timestamp: "2024-01-15T14:30:00Z"
        '500':
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /transaksi/{id}:
    get:
      tags:
        - Transaksi Management
      summary: Dapatkan detail transaksi
      description: Endpoint untuk mendapatkan detail transaksi berdasarkan ID
      operationId: getTransaksiById
      parameters:
        - name: id
          in: path
          required: true
          description: ID transaksi (UUID)
          schema:
            type: string
            format: uuid
          example: "550e8400-e29b-41d4-a716-446655440001"
      responses:
        '200':
          description: Detail transaksi berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransaksiResponse'
              example:
                success: true
                message: "Detail transaksi berhasil diambil"
                code: 200
                data:
                  id: "550e8400-e29b-41d4-a716-446655440001"
                  tanggal: "2024-01-15"
                  jenis: "Pengeluaran"
                  jumlah: 50000
                  kantong_id: "550e8400-e29b-41d4-a716-446655440011"
                  kantong_nama: "Kantong Belanja"
                  catatan: "Makan siang di restoran"
                  created_at: "2024-01-15T12:30:00Z"
                  updated_at: "2024-01-15T12:30:00Z"
                timestamp: "2024-01-15T12:30:00Z"
        '400':
          description: ID tidak valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Format ID tidak valid"
                code: 400
                timestamp: "2024-01-15T12:30:00Z"
        '401':
          description: Tidak memiliki akses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Transaksi tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Transaksi tidak ditemukan"
                code: 404
                timestamp: "2024-01-15T12:30:00Z"
        '500':
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Transaksi Management
      summary: Perbarui transaksi
      description: Endpoint untuk memperbarui data transaksi secara keseluruhan
      operationId: updateTransaksi
      parameters:
        - name: id
          in: path
          required: true
          description: ID transaksi (UUID)
          schema:
            type: string
            format: uuid
          example: "550e8400-e29b-41d4-a716-446655440001"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTransaksiRequest'
            example:
              tanggal: "2024-01-15"
              jenis: "Pengeluaran"
              jumlah: 60000
              kantong_id: "550e8400-e29b-41d4-a716-446655440011"
              catatan: "Makan siang di restoran premium"
      responses:
        '200':
          description: Transaksi berhasil diperbarui
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransaksiResponse'
              example:
                success: true
                message: "Transaksi berhasil diperbarui"
                code: 200
                data:
                  id: "550e8400-e29b-41d4-a716-446655440001"
                  tanggal: "2024-01-15"
                  jenis: "Pengeluaran"
                  jumlah: 60000
                  kantong_id: "550e8400-e29b-41d4-a716-446655440011"
                  kantong_nama: "Kantong Belanja"
                  catatan: "Makan siang di restoran premium"
                  created_at: "2024-01-15T12:30:00Z"
                  updated_at: "2024-01-15T15:45:00Z"
                timestamp: "2024-01-15T15:45:00Z"
        '400':
          description: Data validasi tidak valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '401':
          description: Tidak memiliki akses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Transaksi tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Saldo kantong tidak mencukupi untuk perubahan transaksi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Saldo kantong tidak mencukupi untuk perubahan transaksi"
                code: 409
                timestamp: "2024-01-15T15:45:00Z"
        '500':
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    patch:
      tags:
        - Transaksi Management
      summary: Perbarui sebagian data transaksi
      description: Endpoint untuk memperbarui sebagian data transaksi
      operationId: patchTransaksi
      parameters:
        - name: id
          in: path
          required: true
          description: ID transaksi (UUID)
          schema:
            type: string
            format: uuid
          example: "550e8400-e29b-41d4-a716-446655440001"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchTransaksiRequest'
            example:
              jumlah: 65000
              catatan: "Makan siang di restoran premium dengan tambahan dessert"
      responses:
        '200':
          description: Transaksi berhasil diperbarui
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransaksiResponse'
              example:
                success: true
                message: "Transaksi berhasil diperbarui"
                code: 200
                data:
                  id: "550e8400-e29b-41d4-a716-446655440001"
                  tanggal: "2024-01-15"
                  jenis: "Pengeluaran"
                  jumlah: 65000
                  kantong_id: "550e8400-e29b-41d4-a716-446655440011"
                  kantong_nama: "Kantong Belanja"
                  catatan: "Makan siang di restoran premium dengan tambahan dessert"
                  created_at: "2024-01-15T12:30:00Z"
                  updated_at: "2024-01-15T16:30:00Z"
                timestamp: "2024-01-15T16:30:00Z"
        '400':
          description: Data validasi tidak valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '401':
          description: Tidak memiliki akses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Transaksi tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Saldo kantong tidak mencukupi untuk perubahan transaksi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Transaksi Management
      summary: Hapus transaksi
      description: Endpoint untuk menghapus transaksi berdasarkan ID
      operationId: deleteTransaksi
      parameters:
        - name: id
          in: path
          required: true
          description: ID transaksi (UUID)
          schema:
            type: string
            format: uuid
          example: "550e8400-e29b-41d4-a716-446655440001"
      responses:
        '200':
          description: Transaksi berhasil dihapus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              example:
                success: true
                message: "Transaksi berhasil dihapus"
                code: 200
                timestamp: "2024-01-15T17:00:00Z"
        '401':
          description: Tidak memiliki akses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Transaksi tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Transaksi tidak ditemukan"
                code: 404
                timestamp: "2024-01-15T17:00:00Z"
        '500':
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    Transaksi:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440001"
          description: "ID unik transaksi (UUID)"
        tanggal:
          type: string
          format: date
          example: "2024-01-15"
          description: "Tanggal transaksi (YYYY-MM-DD)"
        jenis:
          type: string
          enum: ["Pemasukan", "Pengeluaran"]
          example: "Pengeluaran"
          description: "Jenis transaksi"
        jumlah:
          type: number
          minimum: 0.01
          example: 50000
          description: "Nominal transaksi (minimum 0.01)"
        kantong_id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440011"
          description: "ID kantong tujuan transaksi"
        kantong_nama:
          type: string
          example: "Kantong Belanja"
          description: "Nama kantong (informasi tambahan dari relasi)"
        catatan:
          type: string
          nullable: true
          maxLength: 500
          example: "Makan siang di restoran"
          description: "Catatan transaksi (opsional)"
        created_at:
          type: string
          format: date-time
          example: "2024-01-15T12:30:00Z"
          description: "Waktu pembuatan transaksi"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-15T12:30:00Z"
          description: "Waktu terakhir transaksi diperbarui"

    CreateTransaksiRequest:
      type: object
      required:
        - tanggal
        - jenis
        - jumlah
        - kantong_id
      properties:
        tanggal:
          type: string
          format: date
          example: "2024-01-15"
          description: "Tanggal transaksi (YYYY-MM-DD)"
        jenis:
          type: string
          enum: ["Pemasukan", "Pengeluaran"]
          example: "Pengeluaran"
          description: "Jenis transaksi"
        jumlah:
          type: number
          minimum: 0.01
          example: 75000
          description: "Nominal transaksi (minimum 0.01)"
        kantong_id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440011"
          description: "ID kantong tujuan transaksi"
        catatan:
          type: string
          nullable: true
          maxLength: 500
          example: "Belanja groceries mingguan"
          description: "Catatan transaksi (opsional)"

    UpdateTransaksiRequest:
      type: object
      required:
        - tanggal
        - jenis
        - jumlah
        - kantong_id
      properties:
        tanggal:
          type: string
          format: date
          example: "2024-01-15"
          description: "Tanggal transaksi (YYYY-MM-DD)"
        jenis:
          type: string
          enum: ["Pemasukan", "Pengeluaran"]
          example: "Pengeluaran"
          description: "Jenis transaksi"
        jumlah:
          type: number
          minimum: 0.01
          example: 60000
          description: "Nominal transaksi (minimum 0.01)"
        kantong_id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440011"
          description: "ID kantong tujuan transaksi"
        catatan:
          type: string
          nullable: true
          maxLength: 500
          example: "Makan siang di restoran premium"
          description: "Catatan transaksi (opsional)"

    PatchTransaksiRequest:
      type: object
      properties:
        tanggal:
          type: string
          format: date
          example: "2024-01-15"
          description: "Tanggal transaksi (YYYY-MM-DD)"
        jenis:
          type: string
          enum: ["Pemasukan", "Pengeluaran"]
          example: "Pengeluaran"
          description: "Jenis transaksi"
        jumlah:
          type: number
          minimum: 0.01
          example: 65000
          description: "Nominal transaksi (minimum 0.01)"
        kantong_id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440011"
          description: "ID kantong tujuan transaksi"
        catatan:
          type: string
          nullable: true
          maxLength: 500
          example: "Makan siang di restoran premium dengan tambahan dessert"
          description: "Catatan transaksi (opsional)"

    BaseResponse:
      type: object
      required:
        - success
        - message
        - code
        - timestamp
      properties:
        success:
          type: boolean
          description: "Status keberhasilan request"
        message:
          type: string
          description: "Pesan response dalam bahasa Indonesia"
        code:
          type: integer
          description: "HTTP status code"
        timestamp:
          type: string
          format: date-time
          description: "Waktu response dalam format ISO 8601"

    SuccessResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              nullable: true

    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            errors:
              type: object
              nullable: true

    TransaksiResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Transaksi'

    TransaksiListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Transaksi'
            meta:
              $ref: '#/components/schemas/PaginationMeta'

    PaginationMeta:
      type: object
      properties:
        current_page:
          type: integer
          minimum: 1
          example: 1
          description: "Halaman saat ini"
        total_pages:
          type: integer
          minimum: 0
          example: 10
          description: "Total halaman"
        total_records:
          type: integer
          minimum: 0
          example: 100
          description: "Total record"
        per_page:
          type: integer
          minimum: 1
          example: 10
          description: "Jumlah item per halaman"

    ValidationError:
      type: object
      properties:
        field:
          type: string
          example: "tanggal"
          description: "Field yang mengalami error validasi"
        message:
          type: string
          example: "Tanggal transaksi tidak boleh kosong"
          description: "Pesan error validasi"

    ValidationErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            errors:
              type: array
              items:
                $ref: '#/components/schemas/ValidationError'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

tags:
  - name: Transaksi Management
    description: Endpoint untuk manajemen transaksi keuangan