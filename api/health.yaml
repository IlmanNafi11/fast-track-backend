openapi: 3.0.3
info:
  title: Fiber Boilerplate API - Health Check & Monitoring
  description: API dokumentasi untuk sistem health check dan monitoring pada fiber boilerplate
  version: 1.0.0
  contact:
    name: Developer Team
    email: developer@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000
    description: Development server
  - url: https://api.example.com
    description: Production server

paths:
  /health:
    get:
      tags:
        - Health Check & Monitoring
      summary: Basic health check
      description: Endpoint sederhana untuk memeriksa status kesehatan aplikasi
      operationId: basicHealthCheck
      responses:
        '200':
          description: Aplikasi berjalan dengan baik
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicHealthResponse'
              example:
                success: true
                message: "Server berjalan dengan baik"
                code: 200
                data:
                  status: "healthy"
                  app: "fiber-boiler-plate"
                timestamp: "2024-01-01T10:00:00Z"
        '500':
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/monitoring/health:
    get:
      tags:
        - Health Check & Monitoring
      summary: Comprehensive health check
      description: Endpoint komprehensif untuk memeriksa status kesehatan aplikasi termasuk database, dependencies, dan system metrics
      operationId: comprehensiveHealthCheck
      responses:
        '200':
          description: Semua komponen sistem sehat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComprehensiveHealthResponse'
              example:
                success: true
                message: "Pemeriksaan kesehatan sistem berhasil"
                code: 200
                data:
                  status: "healthy"
                  app:
                    name: "fiber-boiler-plate"
                    version: "1.0.0"
                    environment: "development"
                    uptime: "5h 30m 15s"
                  database:
                    status: "connected"
                    ping_time: "2ms"
                    open_connections: 5
                    max_connections: 100
                  system:
                    memory_usage: "45.2MB"
                    cpu_cores: 4
                    goroutines: 12
                  timestamp: "2024-01-01T10:00:00Z"
                timestamp: "2024-01-01T10:00:00Z"
        '503':
          description: Beberapa komponen sistem tidak sehat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnhealthyResponse'
              example:
                success: false
                message: "Beberapa komponen sistem mengalami masalah"
                code: 503
                data:
                  status: "unhealthy"
                  app:
                    name: "fiber-boiler-plate"
                    version: "1.0.0"
                    environment: "development"
                    uptime: "5h 30m 15s"
                  database:
                    status: "disconnected"
                    error: "Koneksi database terputus"
                  system:
                    memory_usage: "45.2MB"
                    cpu_cores: 4
                    goroutines: 12
                  timestamp: "2024-01-01T10:00:00Z"
                timestamp: "2024-01-01T10:00:00Z"
        '500':
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/monitoring/metrics:
    get:
      tags:
        - Health Check & Monitoring
      summary: System metrics
      description: Endpoint untuk mendapatkan metrics sistem aplikasi
      operationId: getSystemMetrics
      responses:
        '200':
          description: Metrics sistem berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
              example:
                success: true
                message: "Metrics sistem berhasil diambil"
                code: 200
                data:
                  app:
                    name: "fiber-boiler-plate"
                    version: "1.0.0"
                    environment: "development"
                    start_time: "2024-01-01T04:30:00Z"
                    uptime: "5h 30m 15s"
                  system:
                    memory:
                      allocated: "45.2MB"
                      total_allocated: "120.5MB"
                      system: "256MB"
                      gc_count: 15
                    cpu:
                      cores: 4
                      goroutines: 12
                    runtime:
                      go_version: "go1.21"
                      compiler: "gc"
                      arch: "amd64"
                      os: "linux"
                  database:
                    status: "connected"
                    ping_time: "2ms"
                    open_connections: 5
                    idle_connections: 3
                    max_connections: 100
                    total_queries: 1250
                  http:
                    total_requests: 5420
                    active_requests: 3
                    response_times:
                      min: "5ms"
                      max: "150ms"
                      avg: "25ms"
                timestamp: "2024-01-01T10:00:00Z"
        '500':
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/monitoring/status:
    get:
      tags:
        - Health Check & Monitoring
      summary: Application status
      description: Endpoint untuk mendapatkan status detail aplikasi
      operationId: getApplicationStatus
      responses:
        '200':
          description: Status aplikasi berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              example:
                success: true
                message: "Status aplikasi berhasil diambil"
                code: 200
                data:
                  app:
                    name: "fiber-boiler-plate"
                    version: "1.0.0"
                    environment: "development"
                    status: "running"
                    start_time: "2024-01-01T04:30:00Z"
                    uptime: "5h 30m 15s"
                  services:
                    database:
                      name: "PostgreSQL"
                      status: "healthy"
                      version: "15.3"
                      ping_time: "2ms"
                    cache:
                      name: "Redis"
                      status: "healthy"
                      version: "7.0"
                      ping_time: "1ms"
                  dependencies:
                    - name: "fiber"
                      version: "v2.50.0"
                      status: "loaded"
                    - name: "gorm"
                      version: "v1.25.4"
                      status: "loaded"
                timestamp: "2024-01-01T10:00:00Z"
        '500':
          description: Terjadi kesalahan pada server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    BasicHealthResponse:
      type: object
      required:
        - success
        - message
        - code
        - data
        - timestamp
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Server berjalan dengan baik"
        code:
          type: integer
          example: 200
        data:
          type: object
          properties:
            status:
              type: string
              example: "healthy"
            app:
              type: string
              example: "fiber-boiler-plate"
        timestamp:
          type: string
          format: date-time
          example: "2024-01-01T10:00:00Z"

    ComprehensiveHealthResponse:
      type: object
      required:
        - success
        - message
        - code
        - data
        - timestamp
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Pemeriksaan kesehatan sistem berhasil"
        code:
          type: integer
          example: 200
        data:
          type: object
          properties:
            status:
              type: string
              enum: [healthy, unhealthy, degraded]
              example: "healthy"
            app:
              $ref: '#/components/schemas/AppInfo'
            database:
              $ref: '#/components/schemas/DatabaseStatus'
            redis:
              $ref: '#/components/schemas/RedisStatus'
            system:
              $ref: '#/components/schemas/SystemInfo'
            timestamp:
              type: string
              format: date-time
        timestamp:
          type: string
          format: date-time
          example: "2024-01-01T10:00:00Z"

    UnhealthyResponse:
      type: object
      required:
        - success
        - message
        - code
        - data
        - timestamp
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Beberapa komponen sistem mengalami masalah"
        code:
          type: integer
          example: 503
        data:
          type: object
          properties:
            status:
              type: string
              example: "unhealthy"
            app:
              $ref: '#/components/schemas/AppInfo'
            database:
              type: object
              properties:
                status:
                  type: string
                  example: "disconnected"
                error:
                  type: string
                  example: "Koneksi database terputus"
            redis:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                error:
                  type: string
                  example: "Koneksi Redis tidak tersedia"
            system:
              $ref: '#/components/schemas/SystemInfo'
            timestamp:
              type: string
              format: date-time
        timestamp:
          type: string
          format: date-time
          example: "2024-01-01T10:00:00Z"

    MetricsResponse:
      type: object
      required:
        - success
        - message
        - code
        - data
        - timestamp
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Metrics sistem berhasil diambil"
        code:
          type: integer
          example: 200
        data:
          type: object
          properties:
            app:
              $ref: '#/components/schemas/AppInfo'
            system:
              $ref: '#/components/schemas/DetailedSystemInfo'
            database:
              $ref: '#/components/schemas/DetailedDatabaseStatus'
            redis:
              $ref: '#/components/schemas/RedisStatus'
            http:
              $ref: '#/components/schemas/HttpMetrics'
        timestamp:
          type: string
          format: date-time
          example: "2024-01-01T10:00:00Z"

    StatusResponse:
      type: object
      required:
        - success
        - message
        - code
        - data
        - timestamp
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Status aplikasi berhasil diambil"
        code:
          type: integer
          example: 200
        data:
          type: object
          properties:
            app:
              $ref: '#/components/schemas/DetailedAppInfo'
            services:
              $ref: '#/components/schemas/ServicesStatus'
            dependencies:
              type: array
              items:
                $ref: '#/components/schemas/Dependency'
        timestamp:
          type: string
          format: date-time
          example: "2024-01-01T10:00:00Z"

    AppInfo:
      type: object
      properties:
        name:
          type: string
          example: "fiber-boiler-plate"
        version:
          type: string
          example: "1.0.0"
        environment:
          type: string
          example: "development"
        uptime:
          type: string
          example: "5h 30m 15s"

    DetailedAppInfo:
      type: object
      properties:
        name:
          type: string
          example: "fiber-boiler-plate"
        version:
          type: string
          example: "1.0.0"
        environment:
          type: string
          example: "development"
        status:
          type: string
          example: "running"
        start_time:
          type: string
          format: date-time
          example: "2024-01-01T04:30:00Z"
        uptime:
          type: string
          example: "5h 30m 15s"

    DatabaseStatus:
      type: object
      properties:
        status:
          type: string
          enum: [connected, disconnected, error]
          example: "connected"
        ping_time:
          type: string
          example: "2ms"
        open_connections:
          type: integer
          example: 5
        max_connections:
          type: integer
          example: 100

    RedisStatus:
      type: object
      properties:
        status:
          type: string
          enum: [connected, disconnected, error]
          example: "connected"
        ping_time:
          type: string
          example: "1ms"
        connected_clients:
          type: integer
          example: 2
        used_memory:
          type: string
          example: "1.2MB"
        max_memory:
          type: string
          example: "100MB"
        keyspace_hits:
          type: integer
          example: 1500
        keyspace_misses:
          type: integer
          example: 50
        total_commands_processed:
          type: integer
          example: 2500
        name:
          type: string
          example: "Redis"
        version:
          type: string
          example: "7.0.0"

    DetailedDatabaseStatus:
      type: object
      properties:
        status:
          type: string
          enum: [connected, disconnected, error]
          example: "connected"
        ping_time:
          type: string
          example: "2ms"
        open_connections:
          type: integer
          example: 5
        idle_connections:
          type: integer
          example: 3
        max_connections:
          type: integer
          example: 100
        total_queries:
          type: integer
          example: 1250

    SystemInfo:
      type: object
      properties:
        memory_usage:
          type: string
          example: "45.2MB"
        cpu_cores:
          type: integer
          example: 4
        goroutines:
          type: integer
          example: 12

    DetailedSystemInfo:
      type: object
      properties:
        memory:
          type: object
          properties:
            allocated:
              type: string
              example: "45.2MB"
            total_allocated:
              type: string
              example: "120.5MB"
            system:
              type: string
              example: "256MB"
            gc_count:
              type: integer
              example: 15
        cpu:
          type: object
          properties:
            cores:
              type: integer
              example: 4
            goroutines:
              type: integer
              example: 12
        runtime:
          type: object
          properties:
            go_version:
              type: string
              example: "go1.21"
            compiler:
              type: string
              example: "gc"
            arch:
              type: string
              example: "amd64"
            os:
              type: string
              example: "linux"

    HttpMetrics:
      type: object
      properties:
        total_requests:
          type: integer
          example: 5420
        active_requests:
          type: integer
          example: 3
        response_times:
          type: object
          properties:
            min:
              type: string
              example: "5ms"
            max:
              type: string
              example: "150ms"
            avg:
              type: string
              example: "25ms"

    ServicesStatus:
      type: object
      properties:
        database:
          type: object
          properties:
            name:
              type: string
              example: "PostgreSQL"
            status:
              type: string
              example: "healthy"
            version:
              type: string
              example: "15.3"
            ping_time:
              type: string
              example: "2ms"
        redis:
          type: object
          properties:
            name:
              type: string
              example: "Redis"
            status:
              type: string
              example: "healthy"
            version:
              type: string
              example: "7.0"
            ping_time:
              type: string
              example: "1ms"

    Dependency:
      type: object
      properties:
        name:
          type: string
          example: "fiber"
        version:
          type: string
          example: "v2.50.0"
        status:
          type: string
          example: "loaded"

    ErrorResponse:
      type: object
      required:
        - success
        - message
        - code
        - timestamp
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Terjadi kesalahan pada server"
        code:
          type: integer
          example: 500
        errors:
          type: object
          nullable: true
        timestamp:
          type: string
          format: date-time
          example: "2024-01-01T10:00:00Z"

tags:
  - name: Health Check & Monitoring
    description: Endpoints untuk monitoring dan health check aplikasi