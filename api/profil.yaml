openapi: 3.0.3
info:
  title: Fiber Boilerplate API
  description: API dokumentasi untuk sistem profil pengguna pada fiber boilerplate
  version: 1.0.0
  contact:
    name: Developer Team
    email: developer@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000/api/v1
    description: Development server
  - url: https://api.example.com/v1
    description: Production server

paths:
  /profil/me:
    get:
      tags:
        - Profil
      summary: Mendapatkan informasi profil pengguna
      description: Endpoint untuk mendapatkan informasi profil pengguna yang sedang login
      operationId: getProfile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Profil berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfilSuccessResponse'
              example:
                success: true
                message: "Data profil berhasil diambil"
                code: 200
                data:
                  id: 1
                  name: "John Doe"
                  email: "john.doe@example.com"
                  is_active: true
                  created_at: "2024-01-01T00:00:00Z"
                  updated_at: "2024-01-01T00:00:00Z"
                timestamp: "2024-01-01T00:00:00Z"
        '401':
          description: Token tidak valid atau tidak ada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Tidak memiliki akses"
                code: 401
                timestamp: "2024-01-01T00:00:00Z"
        '404':
          description: Profil tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Profil tidak ditemukan"
                code: 404
                timestamp: "2024-01-01T00:00:00Z"
        '500':
          description: Kesalahan server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Terjadi kesalahan pada server"
                code: 500
                timestamp: "2024-01-01T00:00:00Z"

    put:
      tags:
        - Profil
      summary: Memperbarui profil pengguna
      description: Endpoint untuk memperbarui nama profil pengguna yang sedang login
      operationId: updateProfile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfilRequest'
            example:
              name: "John Doe Updated"
      responses:
        '200':
          description: Profil berhasil diperbarui
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfilSuccessResponse'
              example:
                success: true
                message: "Profil berhasil diperbarui"
                code: 200
                data:
                  id: 1
                  name: "John Doe Updated"
                  email: "john.doe@example.com"
                  is_active: true
                  created_at: "2024-01-01T00:00:00Z"
                  updated_at: "2024-01-01T00:00:00Z"
                timestamp: "2024-01-01T00:00:00Z"
        '400':
          description: Data validasi tidak valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
              example:
                success: false
                message: "Data validasi tidak valid"
                code: 400
                errors:
                  - field: "name"
                    message: "Nama minimal 2 karakter"
                timestamp: "2024-01-01T00:00:00Z"
        '401':
          description: Token tidak valid atau tidak ada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Tidak memiliki akses"
                code: 401
                timestamp: "2024-01-01T00:00:00Z"
        '404':
          description: Profil tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Profil tidak ditemukan"
                code: 404
                timestamp: "2024-01-01T00:00:00Z"
        '500':
          description: Kesalahan server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Terjadi kesalahan pada server"
                code: 500
                timestamp: "2024-01-01T00:00:00Z"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Profil:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        is_active:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"

    UpdateProfilRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          minLength: 2
          maxLength: 100
          example: "John Doe Updated"
          description: "Nama pengguna yang akan diperbarui"

    BaseResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        code:
          type: integer
        timestamp:
          type: string
          format: date-time

    SuccessResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              nullable: true

    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse' 
        - type: object
          properties:
            errors:
              type: object
              nullable: true

    ProfilSuccessResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Profil'

    ValidationError:
      type: object
      properties:
        field:
          type: string
          example: "name"
        message:
          type: string
          example: "Nama minimal 2 karakter"

    ValidationErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            errors:
              type: array
              items:
                $ref: '#/components/schemas/ValidationError'

tags:
  - name: Profil
    description: Endpoint untuk manajemen profil pengguna