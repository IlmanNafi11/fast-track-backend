openapi: 3.0.3
info:
  title: Fiber Boilerplate API - Role Management
  description: API dokumentasi untuk sistem manajemen role pada aplikasi Fast Track
  version: 1.0.0
  contact:
    name: Developer Team
    email: developer@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000/api/v1
    description: Development server
  - url: https://api.example.com/v1
    description: Production server

paths:
  /role:
    get:
      tags:
        - Role Management
      summary: Dapatkan daftar role
      description: Endpoint untuk mendapatkan daftar role dengan fitur pencarian dan pagination
      operationId: getRoleList
      security:
        - BearerAuth: []
      parameters:
        - name: search
          in: query
          description: Pencarian berdasarkan nama role
          schema:
            type: string
          example: "admin"
        - name: status
          in: query
          description: Filter berdasarkan status role
          schema:
            type: string
            enum: [aktif, non_aktif]
        - name: page
          in: query
          description: Nomor halaman
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          description: Jumlah item per halaman
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
      responses:
        '200':
          description: Daftar role berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleListResponse'
              example:
                success: true
                message: "Daftar role berhasil diambil"
                code: 200
                data:
                  - id: "550e8400-e29b-41d4-a716-446655440001"
                    nama: "admin"
                    deskripsi: "Administrator sistem dengan akses penuh"
                    status: "aktif"
                    permissions_count: 25
                    created_at: "2024-01-01T00:00:00Z"
                    updated_at: "2024-01-01T00:00:00Z"
                  - id: "550e8400-e29b-41d4-a716-446655440002"
                    nama: "pengguna"
                    deskripsi: "Pengguna biasa dengan akses terbatas"
                    status: "aktif"
                    permissions_count: 8
                    created_at: "2024-01-01T00:00:00Z"
                    updated_at: "2024-01-01T00:00:00Z"
                meta:
                  current_page: 1
                  total_pages: 3
                  total_records: 25
                  per_page: 10
                timestamp: "2024-01-01T00:00:00Z"
        '401':
          description: Tidak memiliki akses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Tidak memiliki akses"
                code: 401
                timestamp: "2024-01-01T00:00:00Z"
        '500':
          description: Kesalahan server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Terjadi kesalahan pada server"
                code: 500
                timestamp: "2024-01-01T00:00:00Z"

    post:
      tags:
        - Role Management
      summary: Buat role baru
      description: Endpoint untuk membuat role baru dalam sistem dengan permissions terkait
      operationId: createRole
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleRequest'
            example:
              nama: "moderator"
              status: "aktif"
              deskripsi: "Moderator dengan akses untuk mengelola konten"
              permission_ids:
                - "550e8400-e29b-41d4-a716-446655440001"
                - "550e8400-e29b-41d4-a716-446655440002"
                - "550e8400-e29b-41d4-a716-446655440003"
      responses:
        '201':
          description: Role berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
              example:
                success: true
                message: "Role berhasil dibuat"
                code: 201
                data:
                  id: "550e8400-e29b-41d4-a716-446655440003"
                  nama: "moderator"
                  deskripsi: "Moderator dengan akses untuk mengelola konten"
                  status: "aktif"
                  permissions:
                    - id: "550e8400-e29b-41d4-a716-446655440001"
                      nama: "admin.dashboard.read"
                      kategori: "admin"
                      deskripsi: "Akses untuk membaca dashboard admin"
                    - id: "550e8400-e29b-41d4-a716-446655440002"
                      nama: "aplikasi.transaksi.create"
                      kategori: "aplikasi"
                      deskripsi: "Akses untuk membuat transaksi baru"
                  created_at: "2024-01-01T00:00:00Z"
                  updated_at: "2024-01-01T00:00:00Z"
                timestamp: "2024-01-01T00:00:00Z"
        '400':
          description: Data validasi tidak valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
              example:
                success: false
                message: "Data validasi tidak valid"
                code: 400
                errors:
                  - field: "nama"
                    message: "Nama role wajib diisi"
                  - field: "status"
                    message: "Status harus berupa aktif atau non_aktif"
                  - field: "permission_ids"
                    message: "Minimal satu permission harus dipilih"
                timestamp: "2024-01-01T00:00:00Z"
        '401':
          description: Tidak memiliki akses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Role sudah ada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Role dengan nama tersebut sudah ada"
                code: 409
                timestamp: "2024-01-01T00:00:00Z"
        '422':
          description: Permission tidak valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Beberapa permission tidak ditemukan atau tidak valid"
                code: 422
                timestamp: "2024-01-01T00:00:00Z"
        '500':
          description: Kesalahan server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /role/{id}:
    get:
      tags:
        - Role Management
      summary: Dapatkan detail role
      description: Endpoint untuk mendapatkan detail role berdasarkan ID beserta permissions yang terkait
      operationId: getRoleById
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID role
          schema:
            type: string
            format: uuid
          example: "550e8400-e29b-41d4-a716-446655440001"
      responses:
        '200':
          description: Detail role berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
              example:
                success: true
                message: "Detail role berhasil diambil"
                code: 200
                data:
                  id: "550e8400-e29b-41d4-a716-446655440001"
                  nama: "admin"
                  deskripsi: "Administrator sistem dengan akses penuh"
                  status: "aktif"
                  permissions:
                    - id: "550e8400-e29b-41d4-a716-446655440001"
                      nama: "admin.dashboard.read"
                      kategori: "admin"
                      deskripsi: "Akses untuk membaca dashboard admin"
                    - id: "550e8400-e29b-41d4-a716-446655440002"
                      nama: "admin.dashboard.write"
                      kategori: "admin"
                      deskripsi: "Akses untuk menulis data dashboard admin"
                  created_at: "2024-01-01T00:00:00Z"
                  updated_at: "2024-01-01T00:00:00Z"
                timestamp: "2024-01-01T00:00:00Z"
        '401':
          description: Tidak memiliki akses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Role tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Role tidak ditemukan"
                code: 404
                timestamp: "2024-01-01T00:00:00Z"
        '500':
          description: Kesalahan server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Role Management
      summary: Update role
      description: Endpoint untuk mengupdate data role berdasarkan ID termasuk permissions yang terkait
      operationId: updateRole
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID role
          schema:
            type: string
            format: uuid
          example: "550e8400-e29b-41d4-a716-446655440001"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoleRequest'
            example:
              nama: "super_admin"
              status: "aktif"
              deskripsi: "Super administrator dengan akses penuh ke seluruh sistem"
              permission_ids:
                - "550e8400-e29b-41d4-a716-446655440001"
                - "550e8400-e29b-41d4-a716-446655440002"
                - "550e8400-e29b-41d4-a716-446655440003"
                - "550e8400-e29b-41d4-a716-446655440004"
      responses:
        '200':
          description: Role berhasil diupdate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
              example:
                success: true
                message: "Role berhasil diupdate"
                code: 200
                data:
                  id: "550e8400-e29b-41d4-a716-446655440001"
                  nama: "super_admin"
                  deskripsi: "Super administrator dengan akses penuh ke seluruh sistem"
                  status: "aktif"
                  permissions:
                    - id: "550e8400-e29b-41d4-a716-446655440001"
                      nama: "admin.dashboard.read"
                      kategori: "admin"
                      deskripsi: "Akses untuk membaca dashboard admin"
                    - id: "550e8400-e29b-41d4-a716-446655440002"
                      nama: "admin.dashboard.write"
                      kategori: "admin"
                      deskripsi: "Akses untuk menulis data dashboard admin"
                  created_at: "2024-01-01T00:00:00Z"
                  updated_at: "2024-01-01T00:00:00Z"
                timestamp: "2024-01-01T00:00:00Z"
        '400':
          description: Data validasi tidak valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '401':
          description: Tidak memiliki akses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Role tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Role dengan nama tersebut sudah ada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Permission tidak valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Kesalahan server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Role Management
      summary: Hapus role
      description: Endpoint untuk menghapus role berdasarkan ID
      operationId: deleteRole
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID role
          schema:
            type: string
            format: uuid
          example: "550e8400-e29b-41d4-a716-446655440001"
      responses:
        '200':
          description: Role berhasil dihapus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              example:
                success: true
                message: "Role berhasil dihapus"
                code: 200
                data: null
                timestamp: "2024-01-01T00:00:00Z"
        '401':
          description: Tidak memiliki akses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Role tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Role tidak dapat dihapus karena masih digunakan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Role tidak dapat dihapus karena masih digunakan oleh pengguna lain"
                code: 409
                timestamp: "2024-01-01T00:00:00Z"
        '500':
          description: Kesalahan server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /role/{id}/permissions:
    get:
      tags:
        - Role Management
      summary: Dapatkan permissions dari role
      description: Endpoint untuk mendapatkan daftar permissions yang dimiliki oleh role tertentu
      operationId: getRolePermissions
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID role
          schema:
            type: string
            format: uuid
          example: "550e8400-e29b-41d4-a716-446655440001"
        - name: page
          in: query
          description: Nomor halaman
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          description: Jumlah item per halaman
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: Daftar permissions role berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionListResponse'
              example:
                success: true
                message: "Daftar permissions role berhasil diambil"
                code: 200
                data:
                  - id: "550e8400-e29b-41d4-a716-446655440001"
                    nama: "admin.dashboard.read"
                    kategori: "admin"
                    deskripsi: "Akses untuk membaca dashboard admin"
                    created_at: "2024-01-01T00:00:00Z"
                    updated_at: "2024-01-01T00:00:00Z"
                  - id: "550e8400-e29b-41d4-a716-446655440002"
                    nama: "admin.dashboard.write"
                    kategori: "admin"
                    deskripsi: "Akses untuk menulis data dashboard admin"
                    created_at: "2024-01-01T00:00:00Z"
                    updated_at: "2024-01-01T00:00:00Z"
                meta:
                  current_page: 1
                  total_pages: 2
                  total_records: 25
                  per_page: 20
                timestamp: "2024-01-01T00:00:00Z"
        '401':
          description: Tidak memiliki akses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Role tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Kesalahan server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Permission:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440001"
        nama:
          type: string
          example: "admin.dashboard.read"
        kategori:
          type: string
          enum: [admin, aplikasi]
          example: "admin"
        deskripsi:
          type: string
          nullable: true
          example: "Akses untuk membaca dashboard admin"
        created_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"

    Role:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440001"
        nama:
          type: string
          example: "admin"
        deskripsi:
          type: string
          nullable: true
          example: "Administrator sistem dengan akses penuh"
        status:
          type: string
          enum: [aktif, non_aktif]
          example: "aktif"
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
          description: "Daftar permissions yang dimiliki role ini"
        created_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"

    RoleListItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440001"
        nama:
          type: string
          example: "admin"
        deskripsi:
          type: string
          nullable: true
          example: "Administrator sistem dengan akses penuh"
        status:
          type: string
          enum: [aktif, non_aktif]
          example: "aktif"
        permissions_count:
          type: integer
          example: 25
          description: "Jumlah permissions yang dimiliki role ini"
        created_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"

    CreateRoleRequest:
      type: object
      required:
        - nama
        - status
        - permission_ids
      properties:
        nama:
          type: string
          minLength: 2
          maxLength: 50
          pattern: "^[a-z0-9_-]+$"
          example: "moderator"
          description: "Nama role dengan format lowercase, angka, underscore, dash"
        status:
          type: string
          enum: [aktif, non_aktif]
          example: "aktif"
        deskripsi:
          type: string
          maxLength: 255
          nullable: true
          example: "Moderator dengan akses untuk mengelola konten"
        permission_ids:
          type: array
          items:
            type: string
            format: uuid
          minItems: 1
          example:
            - "550e8400-e29b-41d4-a716-446655440001"
            - "550e8400-e29b-41d4-a716-446655440002"
          description: "Daftar ID permissions yang akan diberikan ke role ini"

    UpdateRoleRequest:
      type: object
      required:
        - nama
        - status
        - permission_ids
      properties:
        nama:
          type: string
          minLength: 2
          maxLength: 50
          pattern: "^[a-z0-9_-]+$"
          example: "super_admin"
          description: "Nama role dengan format lowercase, angka, underscore, dash"
        status:
          type: string
          enum: [aktif, non_aktif]
          example: "aktif"
        deskripsi:
          type: string
          maxLength: 255
          nullable: true
          example: "Super administrator dengan akses penuh ke seluruh sistem"
        permission_ids:
          type: array
          items:
            type: string
            format: uuid
          minItems: 1
          example:
            - "550e8400-e29b-41d4-a716-446655440001"
            - "550e8400-e29b-41d4-a716-446655440002"
            - "550e8400-e29b-41d4-a716-446655440003"
          description: "Daftar ID permissions yang akan diberikan ke role ini"

    BaseResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        code:
          type: integer
        timestamp:
          type: string
          format: date-time

    SuccessResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              nullable: true

    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse' 
        - type: object
          properties:
            errors:
              type: object
              nullable: true

    RoleResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Role'

    RoleListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/RoleListItem'
            meta:
              $ref: '#/components/schemas/PaginationMeta'

    PermissionListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Permission'
            meta:
              $ref: '#/components/schemas/PaginationMeta'

    PaginationMeta:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        total_pages:
          type: integer
          example: 5
        total_records:
          type: integer
          example: 47
        per_page:
          type: integer
          example: 10

    ValidationError:
      type: object
      properties:
        field:
          type: string
          example: "nama"
        message:
          type: string
          example: "Nama role wajib diisi"

    ValidationErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            errors:
              type: array
              items:
                $ref: '#/components/schemas/ValidationError'

tags:
  - name: Role Management
    description: Endpoint untuk sistem manajemen role dan permissions pengguna