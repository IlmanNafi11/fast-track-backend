openapi: 3.0.3
info:
  title: Fiber Boilerplate API
  description: API dokumentasi untuk sistem authentication pada fiber boilerplate
  version: 1.0.0
  contact:
    name: Developer Team
    email: developer@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000/api/v1
    description: Development server
  - url: https://api.example.com/v1
    description: Production server

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Registrasi pengguna baru
      description: Endpoint untuk mendaftarkan pengguna baru ke dalam sistem
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
            example:
              name: "John Doe"
              email: "john.doe@example.com"
              password: "password123"
      responses:
        '201':
          description: Registrasi berhasil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSuccessResponse'
              example:
                success: true
                message: "Registrasi berhasil"
                code: 201
                data:
                  user:
                    id: 1
                    name: "John Doe"
                    email: "john.doe@example.com"
                    is_active: true
                    created_at: "2024-01-01T00:00:00Z"
                    updated_at: "2024-01-01T00:00:00Z"
                  access_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  refresh_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  token_type: "Bearer"
                  expires_in: 3600
                timestamp: "2024-01-01T00:00:00Z"
        '400':
          description: Data validasi tidak valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
              example:
                success: false
                message: "Data validasi tidak valid"
                code: 400
                errors:
                  - field: "email"
                    message: "Format email tidak valid"
                  - field: "password"
                    message: "Password minimal 8 karakter"
                timestamp: "2024-01-01T00:00:00Z"
        '409':
          description: Email sudah terdaftar
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Email sudah terdaftar"
                code: 409
                timestamp: "2024-01-01T00:00:00Z"
        '500':
          description: Kesalahan server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Terjadi kesalahan pada server"
                code: 500
                timestamp: "2024-01-01T00:00:00Z"

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login pengguna
      description: Endpoint untuk autentikasi pengguna dengan email dan password
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
            example:
              email: "john.doe@example.com"
              password: "password123"
      responses:
        '200':
          description: Login berhasil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSuccessResponse'
              example:
                success: true
                message: "Login berhasil"
                code: 200
                data:
                  user:
                    id: 1
                    name: "John Doe"
                    email: "john.doe@example.com"
                    is_active: true
                    created_at: "2024-01-01T00:00:00Z"
                    updated_at: "2024-01-01T00:00:00Z"
                  access_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  refresh_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  token_type: "Bearer"
                  expires_in: 3600
                timestamp: "2024-01-01T00:00:00Z"
        '400':
          description: Data validasi tidak valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '401':
          description: Email atau password salah
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Email atau password salah"
                code: 401
                timestamp: "2024-01-01T00:00:00Z"
        '500':
          description: Kesalahan server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/refresh:
    post:
      tags:
        - Authentication
      summary: Refresh access token
      description: Endpoint untuk memperbarui access token menggunakan refresh token
      operationId: refreshToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
            example:
              refresh_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
      responses:
        '200':
          description: Refresh token berhasil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshTokenSuccessResponse'
              example:
                success: true
                message: "Token berhasil diperbarui"
                code: 200
                data:
                  access_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  refresh_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  token_type: "Bearer"
                  expires_in: 3600
                timestamp: "2024-01-01T00:00:00Z"
        '400':
          description: Data validasi tidak valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '401':
          description: Refresh token tidak valid atau expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Refresh token tidak valid atau sudah expired"
                code: 401
                timestamp: "2024-01-01T00:00:00Z"
        '500':
          description: Kesalahan server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/reset-password:
    post:
      tags:
        - Authentication
      summary: Request reset password
      description: Endpoint untuk meminta reset password, akan mengirim link reset ke email
      operationId: resetPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
            example:
              email: "john.doe@example.com"
      responses:
        '200':
          description: Link reset password berhasil dikirim
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              example:
                success: true
                message: "Link reset password telah dikirim ke email Anda"
                code: 200
                timestamp: "2024-01-01T00:00:00Z"
        '400':
          description: Data validasi tidak valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '404':
          description: Email tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Email tidak ditemukan"
                code: 404
                timestamp: "2024-01-01T00:00:00Z"
        '500':
          description: Kesalahan server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/reset-password/confirm:
    post:
      tags:
        - Authentication
      summary: Confirm reset password
      description: Endpoint untuk mengkonfirmasi reset password dengan token
      operationId: confirmResetPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPasswordRequest'
            example:
              token: "abc123def456"
              new_password: "newpassword123"
      responses:
        '200':
          description: Password berhasil direset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              example:
                success: true
                message: "Password berhasil direset"
                code: 200
                timestamp: "2024-01-01T00:00:00Z"
        '400':
          description: Data validasi tidak valid atau token expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '404':
          description: Token tidak valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Token reset password tidak valid"
                code: 404
                timestamp: "2024-01-01T00:00:00Z"
        '500':
          description: Kesalahan server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: Logout pengguna
      description: Endpoint untuk logout pengguna dan invalidate token
      operationId: logout
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Logout berhasil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              example:
                success: true
                message: "Logout berhasil"
                code: 200
                timestamp: "2024-01-01T00:00:00Z"
        '401':
          description: Token tidak valid atau sudah expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                message: "Tidak memiliki akses"
                code: 401
                timestamp: "2024-01-01T00:00:00Z"
        '500':
          description: Kesalahan server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        is_active:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"

    AuthRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        password:
          type: string
          format: password
          minLength: 8
          example: "password123"

    RegisterRequest:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
          minLength: 2
          maxLength: 100
          example: "John Doe"
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        password:
          type: string
          format: password
          minLength: 8
          example: "password123"

    RefreshTokenRequest:
      type: object
      required:
        - refresh_token
      properties:
        refresh_token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

    ResetPasswordRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
          example: "john.doe@example.com"

    NewPasswordRequest:
      type: object
      required:
        - token
        - new_password
      properties:
        token:
          type: string
          example: "abc123def456"
        new_password:
          type: string
          format: password
          minLength: 8
          example: "newpassword123"

    AuthResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        access_token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        refresh_token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        token_type:
          type: string
          example: "Bearer"
        expires_in:
          type: integer
          example: 3600

    RefreshTokenResponse:
      type: object
      properties:
        access_token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        refresh_token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        token_type:
          type: string
          example: "Bearer"
        expires_in:
          type: integer
          example: 3600

    BaseResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        code:
          type: integer
        timestamp:
          type: string
          format: date-time

    SuccessResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              nullable: true

    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse' 
        - type: object
          properties:
            errors:
              type: object
              nullable: true

    AuthSuccessResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/AuthResponse'

    RefreshTokenSuccessResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/RefreshTokenResponse'

    ValidationError:
      type: object
      properties:
        field:
          type: string
          example: "email"
        message:
          type: string
          example: "Format email tidak valid"

    ValidationErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            errors:
              type: array
              items:
                $ref: '#/components/schemas/ValidationError'

tags:
  - name: Authentication
    description: Endpoint untuk sistem autentikasi pengguna